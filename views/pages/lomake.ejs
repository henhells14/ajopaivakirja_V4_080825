<!-- GPS-sivun omat CSS:t -->
<link rel="stylesheet" href="/Pages/Page3/local-css/kolmassivu.css">

<main class="hero">
<div class="top-section">
  <div class="welcome-box">
    <h2>Ajohistoria</h2>
    <p>
      T√§√§lt√§ l√∂yd√§t matkasi. <br><br>
      Onpas tullut ajokilometrej√§.
      Voit katsoa miten paljon olet ajanut ty√∂matkoja vs. vapaa-ajan matkoja.
    </p>
  </div>

<section class="trip-form">
  <h2 id="formTitle">Uusi ajomatka</h2>
  
  <!-- N√§ytet√§√§n esit√§ytettyjen tietojen ilmoitus -->
  <div class="prefilled-info" id="prefilledInfo" style="display: none;">
    <h4 id="prefilledTitle">üìç GPS-matka ladattu</h4>
    <p id="prefilledMessage">Lomake on esit√§ytetty viimeisimm√§n GPS-matkan tiedoilla. Tarkista ja muokkaa tietoja tarpeen mukaan.</p>
    <button class="clear-data-btn" onclick="clearPrefilledData()">Tyhjenn√§ esit√§ytetyt tiedot</button>
  </div>
  

  <!-- Muokkaustilan ilmoitus -->
<div class="edit-mode-info" id="editModeInfo" style="display: none;">
  <h4>‚úèÔ∏è Muokkaat matkaa</h4>
  <p>Teet muutoksia olemassa olevaan matkaan. Tallenna muutokset tai peruuta.</p>
  <div class="edit-buttons">
    <button class="cancel-edit-btn" onclick="cancelEdit()">Peruuta muokkaus</button>
    <button class="delete-btn" onclick="deleteCurrentTrip()">üóëÔ∏è Poista matka</button>
  </div>
</div>
  
  <!-- Lomake -->
  <form class="trip-form" action="/submit-trip" method="POST" id="tripForm">
    <!-- Piilotettu kentt√§ matkan ID:lle muokkaustilassa -->
    <input type="hidden" id="tripId" name="tripId" value="">
    <input type="hidden" id="isEdit" name="isEdit" value="false">
    
    <label for="date">P√§iv√§m√§√§r√§:</label>
    <input type="date" id="date" name="date" required>

    <label for="from">L√§ht√∂paikka:</label>
    <input type="text" id="from" name="from" required placeholder="Sy√∂t√§ l√§ht√∂paikka">

    <label for="to">Kohde:</label>
    <input type="text" id="to" name="to" required placeholder="Sy√∂t√§ kohde">

    <label for="distanceField">Matkan pituus:</label>
    <input type="text" id="distanceField" name="distance" placeholder="0.00 km">

    <label for="type">Matkan tyyppi:</label>
    <select id="type" name="type" required>
      <option value="">Valitse matkan tyyppi</option>
      <option value="ty√∂">Ty√∂matka</option>
      <option value="yksityinen">Yksityisajo</option>
    </select>

    <button type="submit" id="submitBtn">Tallenna matka</button>
  </form>
</section>

<!-- Yhteenveto -->
    <div class="trip-summary">
      <h3>Yhteenveto</h3>
      <div class="summary-stats">
        <div class="stat">
          <span class="stat-label">Yhteens√§ matkoja:</span>
          <span class="stat-value"><%= trips.length %> kpl</span>
        </div>
        <div class="stat">
          <span class="stat-label">Ty√∂matkoja:</span>
          <span class="stat-value"><%= trips.filter(t => t.purpose === 'ty√∂').length %> kpl</span>
        </div>
        <div class="stat">
          <span class="stat-label">Yksityisajoa:</span>
          <span class="stat-value"><%= trips.filter(t => t.purpose === 'yksityinen').length %> kpl</span>
        </div>
        <div class="stat">
          <span class="stat-label">Kokonaismatka:</span>
          <span class="stat-value">
            <%= trips.reduce((sum, t) => sum + (t.distance || 0), 0).toFixed(1) %> km
          </span>
        </div>
      </div>
</div>  


<!-- Matkahistoria-osio - P√ÑIVITETTY VERSIO -->
<section class="trip-history">
  <h2>Matkahistoria</h2>
  
  <% if (trips && trips.length > 0) { %>
    <div class="trips-container">
      <% trips.forEach(function(trip, index) { %>
        <div class="trip-card" 
             onclick="editTrip('<%= trip._id || index %>')"
             data-trip-id="<%= trip._id || index %>"
             data-trip-date="<%= new Date(trip.startTime).toISOString().split('T')[0] %>"
             data-trip-from="<%= trip.startLocation.address || 'Tuntematon l√§ht√∂paikka' %>"
             data-trip-to="<%= trip.endLocation.address || 'Tuntematon kohde' %>"
             data-trip-distance="<%= trip.distance ? trip.distance.toFixed(1) : '0' %>"
             data-trip-type="<%= trip.purpose %>"
             style="cursor: pointer; border: 2px solid transparent; transition: border-color 0.2s;">
          
          <div class="trip-header">
            <span class="trip-date">
              <%= new Date(trip.startTime).toLocaleDateString('fi-FI') %>
            </span>
            <span class="trip-type <%= trip.purpose === 'ty√∂' ? 'work-trip' : 'personal-trip' %>">
              <%= trip.purpose === 'ty√∂' ? 'üíº Ty√∂matka' : 'üöó Yksityisajo' %>
            </span>
            <span class="edit-hint">‚úèÔ∏è Klikkaa muokataksesi</span>
          </div>
          
          <div class="trip-details">
            <div class="route">
              <span class="from">üìç <%= trip.startLocation.address || 'Tuntematon l√§ht√∂paikka' %></span>
              <span class="arrow">‚Üí</span>
              <span class="to">üéØ <%= trip.endLocation.address || 'Tuntematon kohde' %></span>
            </div>
            
            <div class="distance">
              <span class="distance-value">
                üìè <%= trip.distance ? trip.distance.toFixed(1) + ' km' : 'Ei tietoa' %>
              </span>
            </div>
          </div>
          
          <div class="trip-time">
            <small>Tallennettu: <%= new Date(trip.startTime).toLocaleString('fi-FI') %></small>
          </div>
        </div>
      <% }); %>
    </div>
    
  <% } else { %>
    <div class="no-trips">
      <p>üöó Ei tallennettuja matkoja viel√§.</p>
      <p>T√§yt√§ yll√§ oleva lomake tai k√§yt√§ GPS-toimintoa tallentaaksesi ensimm√§isen matkasi!</p>
    </div>
  <% } %>
</section>

<script>
// Muuttuja joka pit√§√§ kirjaa muokkaustilasta
let isEditMode = false;
let currentEditId = null;

// Funktio matkan muokkausta varten
function editTrip(tripId) {
    console.log('Muokataan matkaa ID:', tripId);
    
    // Etsi matkakortti data-attribuuttien perusteella
    const tripCard = document.querySelector(`[data-trip-id="${tripId}"]`);
    
    if (!tripCard) {
        console.error('Matkakorttia ei l√∂ytynyt ID:ll√§:', tripId);
        return;
    }
    
    // Hae matkan tiedot data-attribuuteista
    const tripData = {
        id: tripId,
        date: tripCard.getAttribute('data-trip-date'),
        from: tripCard.getAttribute('data-trip-from'),
        to: tripCard.getAttribute('data-trip-to'),
        distance: tripCard.getAttribute('data-trip-distance'),
        type: tripCard.getAttribute('data-trip-type')
    };
    
    console.log('Matkan tiedot:', tripData);
    
    // Siirry muokkaustilaan
    enterEditMode(tripData);
    
    // Vierit√§ lomakkeeseen
    document.querySelector('.trip-form').scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
    });
}

// Funktio muokkaustilaan siirtymiseen
function enterEditMode(tripData) {
    isEditMode = true;
    currentEditId = tripData.id;
    
    // Muuta lomakkeen otsikko ja painike
    document.getElementById('formTitle').textContent = 'Muokkaa ajomatkaa';
    document.getElementById('submitBtn').textContent = 'Tallenna muutokset';
    
    // Lis√§√§ muokkaus-luokka formille
    document.querySelector('.trip-form').classList.add('edit-mode-active');
    
    // T√§yt√§ lomakkeen kent√§t
    document.getElementById('tripId').value = tripData.id;
    document.getElementById('isEdit').value = 'true';
    document.getElementById('date').value = tripData.date;
    document.getElementById('from').value = tripData.from;
    document.getElementById('to').value = tripData.to;
    document.getElementById('distanceField').value = tripData.distance + ' km';
    document.getElementById('type').value = tripData.type;
    
    // N√§yt√§ muokkaustilan ilmoitus
    document.getElementById('editModeInfo').style.display = 'block';
    
    // Piilota GPS-ilmoitus jos se on n√§kyviss√§
    document.getElementById('prefilledInfo').style.display = 'none';
    
    // Poista GPS-tiedot localStorage:sta jos niit√§ on
    localStorage.removeItem('latestTripData');
    
    // Korosta valittu matkakortti
    highlightSelectedTrip(tripData.id);
    
    console.log('Siirrytty muokkaustilaan matkalle:', tripData.id);
}

// Funktio muokkauksen peruuttamiseen
function cancelEdit() {
    console.log('Peruutetaan muokkaus');
    
    // Palaa normaalitilaan
    exitEditMode();
    
    // Tyhjenn√§ lomake
    clearForm();
    
    // Tarkista GPS-tiedot uudelleen
    checkForGPSData();
}

// Funktio muokkaustilasta poistumiseen
function exitEditMode() {
    isEditMode = false;
    currentEditId = null;
    
    // Palauta lomakkeen alkuper√§iset tekstit
    document.getElementById('formTitle').textContent = 'Uusi ajomatka';
    document.getElementById('submitBtn').textContent = 'Tallenna matka';
    
    // Poista muokkaus-luokka
    document.querySelector('.trip-form').classList.remove('edit-mode-active');
    
    // Piilota muokkaustilan ilmoitus
    document.getElementById('editModeInfo').style.display = 'none';
    
    // Tyhjenn√§ piilotetut kent√§t
    document.getElementById('tripId').value = '';
    document.getElementById('isEdit').value = 'false';
    
    // Poista korostus kaikista matkakorteista
    removeAllHighlights();
    
    console.log('Poistuttu muokkaustilasta');
}

// Funktio matkakortin korostamiseen
function highlightSelectedTrip(tripId) {
    // Poista vanhat korostukset
    removeAllHighlights();
    
    // Korosta valittu kortti
    const selectedCard = document.querySelector(`[data-trip-id="${tripId}"]`);
    if (selectedCard) {
        selectedCard.style.borderColor = '#007bff';
        selectedCard.style.backgroundColor = '#f8f9fa';
        selectedCard.classList.add('selected-trip');
    }
}

// Funktio kaikkien korostusten poistamiseen
function removeAllHighlights() {
    const allCards = document.querySelectorAll('.trip-card');
    allCards.forEach(card => {
        card.style.borderColor = 'transparent';
        card.style.backgroundColor = '';
        card.classList.remove('selected-trip');
    });
}

// Funktio lomakkeen tyhjent√§miseen
function clearForm() {
    document.getElementById('date').value = '';
    document.getElementById('from').value = '';
    document.getElementById('to').value = '';
    document.getElementById('distanceField').value = '';
    document.getElementById('type').value = '';
}

// Funktio GPS-tietojen tarkistamiseen
function checkForGPSData() {
    const tripData = localStorage.getItem('latestTripData');
    
    if (tripData && !isEditMode) {
        try {
            const trip = JSON.parse(tripData);
            
            if (trip.date) {
                document.getElementById('date').value = trip.date;
            }
            
            if (trip.distance) {
                document.getElementById('distanceField').value = trip.distance + ' km';
            }
            
            if (trip.startLocation) {
                if (typeof trip.startLocation === 'object' && trip.startLocation.address) {
                    document.getElementById('from').value = trip.startLocation.address;
                } else if (typeof trip.startLocation === 'string') {
                    document.getElementById('from').value = trip.startLocation;
                }
            }
            
            if (trip.endLocation) {
                if (typeof trip.endLocation === 'object' && trip.endLocation.address) {
                    document.getElementById('to').value = trip.endLocation.address;
                } else if (typeof trip.endLocation === 'string') {
                    document.getElementById('to').value = trip.endLocation;
                }
            }
            
            document.getElementById('prefilledInfo').style.display = 'block';
            console.log('GPS-matkan tiedot ladattu:', trip);
            
        } catch (error) {
            console.error('Virhe GPS-tietojen lataamisessa:', error);
        }
    }
}

// P√§ivitetty clearPrefilledData funktio
function clearPrefilledData() {
    // Jos ollaan muokkaustilassa, poistu siit√§
    if (isEditMode) {
        exitEditMode();
    }
    
    // Tyhjenn√§ lomakkeen kent√§t
    clearForm();
    
    // Piilota ilmoitus
    document.getElementById('prefilledInfo').style.display = 'none';
    
    // Poista GPS-tiedot localStorage:sta
    localStorage.removeItem('latestTripData');
}

// Lomakkeen l√§hetystapahtuman k√§sittely
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('tripForm');
    
    // Lomakkeen submit-tapahtuma
    form.addEventListener('submit', function(e) {
        if (isEditMode) {
            console.log('L√§hetet√§√§n muokattu matka, ID:', currentEditId);
            
            // Varmista ett√§ hidden-kent√§t ovat oikein
            document.getElementById('tripId').value = currentEditId;
            document.getElementById('isEdit').value = 'true';
        } else {
            console.log('L√§hetet√§√§n uusi matka');
            
            // Varmista ett√§ hidden-kent√§t ovat oikein
            document.getElementById('tripId').value = '';
            document.getElementById('isEdit').value = 'false';
        }
    });
    
    // Lataa GPS-tiedot sivun latauksen yhteydess√§
    checkForGPSData();
});

// Funktio nykyisen muokattavan matkan poistamiseen
function deleteCurrentTrip() {
    if (!currentEditId) {
        alert('Virhe: Ei valittua matkaa poistettavaksi');
        return;
    }
    
    if (confirm('Haluatko varmasti poistaa t√§m√§n matkan? T√§t√§ toimintoa ei voi perua.')) {
        // Luo form joka l√§hett√§√§ DELETE-pyynn√∂n
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/delete-trip';
        
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'tripId';
        input.value = currentEditId;
        
        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
    }
}
</script>


</main>

